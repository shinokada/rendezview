<?php

class EventsController extends BaseController {

	/**
	*Events
	* Event Model
	* @var Event
	*/
	protected $event;

	/**
	* Inject the model.
	* @param Event $event
	*/
	public function __construct(Event $event)
	{
		parent::__construct();
		$this->event = $event;

	}
	/**
	 * Display a listing of the resource.
	 *
	 * @return Response
	 */
	public function index()
	{
		// get all the events
		$events = Event::all();

		// load the view and pass the events
		return View::make('events.index')
		->with('events', $events);
	}

	/**
	 * Show the form for creating a new resource.
	 *
	 * @return Response
	 */
	public function create()
	{
		// load the create form (app/views/events/create.blade.php)
		return View::make('events.create');
	}

	/**
	 * Store a newly created resource in storage.
	 *
	 * @return Response
	 */
	public function store()
	{
		// validate
		// read more on validation at http://laravel.com/docs/validation
		$rules = array(
			'event_admin'       => 'required',
			'event_name'       => 'required',
			'event_location'      => 'required',
			'event_capacity' => 'required|numeric',
			'status'
			);
		$validator = Validator::make(Input::all(), $rules);

		// process the login
		if ($validator->fails()) {
			return Redirect::to('events/create')
			->withErrors($validator)
			->withInput(Input::except('password'));
		} else {
			// store
			$event = new Event;
			$event->event_admin       = Input::get('event_admin');
			$event->event_name       = Input::get('event_name');
			$event->event_location      = Input::get('event_location');
			$event->event_capacity = Input::get('event_capacity');
			$event->status = Input::get('status');
			$event->save();

			// redirect
			Session::flash('message', 'Successfully created event!');
			return Redirect::to('events');
		}
	}

	/**
	 * Display the specified resource.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function show($id)
	{
		// get the event
		$event = Event::find($id);

		// show the view and pass the event to it
		return View::make('events.show')
		->with('event', $event);
	}

	/**
	 * Show the form for editing the specified resource.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function edit($id)
	{
		// get the event
		$event = Event::find($id);

		// show the edit form and pass the event
		return View::make('events.edit')
		->with('event', $event);
	}

	/**
	 * Update the specified resource in storage.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function update($id)
	{
		// validate
		// read more on validation at http://laravel.com/docs/validation
		$rules = array(
			'event_admin'       => 'required',
			'event_name'       => 'required',
			'event_location'      => 'required',
			'event_capacity' => 'required|numeric',
			'status'
			);
		$validator = Validator::make(Input::all(), $rules);

		// process the login
		if ($validator->fails()) {
			return Redirect::to('events/' . $id . '/edit')
			->withErrors($validator)
			->withInput(Input::except('password'));
		} else {
			// store
			$event = Event::find($id);
			$event->event_admin       = Input::get('event_admin');
			$event->event_name       = Input::get('event_name');
			$event->event_location      = Input::get('event_location');
			$event->event_capacity = Input::get('event_capacity');
			$event->status = Input::get('status');
			$event->save();

			// redirect
			Session::flash('message', 'Successfully updated event!');
			return Redirect::to('events');
		}
	}

	/**
	 * Remove the specified resource from storage.
	 *
	 * @param  int  $id
	 * @return Response
	 */
	public function destroy($id)
	{
		// delete
		$event = Event::find($id);
		$event->delete();

		// redirect
		Session::flash('message', 'Successfully deleted the event!');
		return Redirect::to('events');
	}
}
